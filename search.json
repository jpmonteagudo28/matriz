[{"path":[]},{"path":"https://matriz.jpmonteagudo.com/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://matriz.jpmonteagudo.com/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://matriz.jpmonteagudo.com/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://matriz.jpmonteagudo.com/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://matriz.jpmonteagudo.com/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement jpmonteagudo2014@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://matriz.jpmonteagudo.com/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://matriz.jpmonteagudo.com/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://matriz.jpmonteagudo.com/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://matriz.jpmonteagudo.com/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://matriz.jpmonteagudo.com/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://matriz.jpmonteagudo.com/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://matriz.jpmonteagudo.com/CONTRIBUTING.html","id":"pull-request-tips","dir":"","previous_headings":"","what":"Pull-request tips","title":"NA","text":"welcome pull requests. accepting PR forces maintain code life matriz. seem picky PRs accept — yes, . hard feelings. (= Principle Infinite Maintenance) ’s plenty room improvement matriz code, every line written backdrop ignorance fallibility, mostly . (= Principle Prior Ignorance) PRs simple documentation fixes (e.g., spelling grammar corrections) always welcome. substantial changes, don’t necessarily prefer PRs issues feature requests. good description problem working example better half-baked PR. can often fix less time take review PR. (= Principle Efficiency) want feedback potential PR, recommend opening issue rather reaching directly. someone else see . (= Principle Exposure) Small PRs easier accept large ones. Large PRs benefit worthy complexity. PRs want amend package’s external functions receive highest scrutiny. (= Principle Proportionality) consider every PR, can’t promise detailed code reviews comments. Helpful R users can found Posit Community forum, R Language Collective, Data Science Learning Community’s slack channel. (= Principle Specialization) PRs necessary, sense proposed change can accomplished patching repo. (= Principle Necessity) PRs avoid introducing magic behavior (= Principle Least Astonishment). PRs forbid little possible. particular, PRs avoid enshrining personal preference default behavior (others different preferences). (= Principle Generality) PRs avoid reinventing features already exist R. (= Principle Economy) PRs fix real problems arisen actual use, theoretical conjectural problems. (= Principle Practical Justification) follow principles , ’re virtuous habits. Still, created matriz tool writing research. certain PR negatively impact work, can’t accept . (= Principle Royalty) ’re new R, PR likely declined, certain things perceive bugs actually features, certain things perceive missing actually present, certain limitations perceive surmountable actually . (See also point #1 re: backdrop ignorance.) (= Principle Novelty) PR includes open-source material elsewhere, please make sure material ) compatible matriz license b) attributed whatever way required. Otherwise, accept . (= Principle Legality) PRs unit tests, don’t, treated harshly. . (= Principle Proof)","code":""},{"path":"https://matriz.jpmonteagudo.com/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU Affero General Public License","title":"GNU Affero General Public License","text":"Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://matriz.jpmonteagudo.com/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU Affero General Public License","text":"GNU Affero General Public License free, copyleft license software kinds works, specifically designed ensure cooperation community case network server software. licenses software practical works designed take away freedom share change works. contrast, General Public Licenses intended guarantee freedom share change versions program–make sure remains free software users. speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. Developers use General Public Licenses protect rights two steps: (1) assert copyright software, (2) offer License gives legal permission copy, distribute /modify software. secondary benefit defending users’ freedom improvements made alternate versions program, receive widespread use, become available developers incorporate. Many developers free software heartened encouraged resulting cooperation. However, case software used network servers, result may fail come . GNU General Public License permits making modified version letting public access server without ever releasing source code public. GNU Affero General Public License designed specifically ensure , cases, modified source code becomes available community. requires operator network server provide source code modified version running users server. Therefore, public use modified version, publicly accessible server, gives public access source code modified version. older license, called Affero General Public License published Affero, designed accomplish similar goals. different license, version Affero GPL, Affero released new version Affero GPL permits relicensing license. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://matriz.jpmonteagudo.com/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions.","title":"GNU Affero General Public License","text":"“License” refers version 3 GNU Affero General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://matriz.jpmonteagudo.com/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code.","title":"GNU Affero General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://matriz.jpmonteagudo.com/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions.","title":"GNU Affero General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://matriz.jpmonteagudo.com/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law.","title":"GNU Affero General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://matriz.jpmonteagudo.com/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies.","title":"GNU Affero General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://matriz.jpmonteagudo.com/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions.","title":"GNU Affero General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: work must carry prominent notices stating modified , giving relevant date. work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://matriz.jpmonteagudo.com/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms.","title":"GNU Affero General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://matriz.jpmonteagudo.com/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms.","title":"GNU Affero General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: Disclaiming warranty limiting liability differently terms sections 15 16 License; Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; Limiting use publicity purposes names licensors authors material; Declining grant rights trademark law use trade names, trademarks, service marks; Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://matriz.jpmonteagudo.com/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination.","title":"GNU Affero General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://matriz.jpmonteagudo.com/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies.","title":"GNU Affero General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://matriz.jpmonteagudo.com/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients.","title":"GNU Affero General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://matriz.jpmonteagudo.com/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents.","title":"GNU Affero General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://matriz.jpmonteagudo.com/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom.","title":"GNU Affero General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://matriz.jpmonteagudo.com/LICENSE.html","id":"id_13-remote-network-interaction-use-with-the-gnu-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Remote Network Interaction; Use with the GNU General Public License.","title":"GNU Affero General Public License","text":"Notwithstanding provision License, modify Program, modified version must prominently offer users interacting remotely computer network (version supports interaction) opportunity receive Corresponding Source version providing access Corresponding Source network server charge, standard customary means facilitating copying software. Corresponding Source shall include Corresponding Source work covered version 3 GNU General Public License incorporated pursuant following paragraph. Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU General Public License single combined work, convey resulting work. terms License continue apply part covered work, work combined remain governed version 3 GNU General Public License.","code":""},{"path":"https://matriz.jpmonteagudo.com/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License.","title":"GNU Affero General Public License","text":"Free Software Foundation may publish revised /new versions GNU Affero General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU Affero General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU Affero General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU Affero General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://matriz.jpmonteagudo.com/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty.","title":"GNU Affero General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://matriz.jpmonteagudo.com/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability.","title":"GNU Affero General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://matriz.jpmonteagudo.com/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16.","title":"GNU Affero General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://matriz.jpmonteagudo.com/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU Affero General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. software can interact users remotely computer network, also make sure provides way users get source. example, program web application, interface display “Source” link leads users archive code. many ways offer source, different solutions better different programs; see section 13 specific requirements. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU AGPL, see https://www.gnu.org/licenses/.","code":"<one line to give the program's name and a brief idea of what it does.>     Copyright (C) <year>  <name of author>      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU Affero General Public License as     published by the Free Software Foundation, either version 3 of the     License, or (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU Affero General Public License for more details.      You should have received a copy of the GNU Affero General Public License     along with this program.  If not, see <https://www.gnu.org/licenses/>."},{"path":"https://matriz.jpmonteagudo.com/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"JP Monteagudo. Author, maintainer, copyright holder.","code":""},{"path":"https://matriz.jpmonteagudo.com/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Monteagudo J (2025). matriz: Literature Matrix Synthesis Tools Epidemiology Health Science Research. R package version 1.0.1, https://github.com/jpmonteagudo28/matriz.","code":"@Manual{,   title = {matriz: Literature Matrix Synthesis Tools for Epidemiology and Health Science Research},   author = {JP Monteagudo},   year = {2025},   note = {R package version 1.0.1},   url = {https://github.com/jpmonteagudo28/matriz}, }"},{"path":"https://matriz.jpmonteagudo.com/index.html","id":"matriz-","dir":"","previous_headings":"","what":"Literature Matrix Synthesis Tools for Epidemiology and Health Science Research","title":"Literature Matrix Synthesis Tools for Epidemiology and Health Science Research","text":"goal matriz help easily generate manage structured literature review matrices R. package aims streamline research synthesis, track key study details, organize citations efficiently.","code":""},{"path":"https://matriz.jpmonteagudo.com/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Literature Matrix Synthesis Tools for Epidemiology and Health Science Research","text":"can install development version matriz like : can download CRAN:","code":"devtools::install_github(\"jpmonteagudo28/matriz) install.packages(\"matriz\")"},{"path":"https://matriz.jpmonteagudo.com/index.html","id":"intro","dir":"","previous_headings":"","what":"Intro","title":"Literature Matrix Synthesis Tools for Epidemiology and Health Science Research","text":"document walks main steps using matriz, setting matrix searching refining .","code":""},{"path":"https://matriz.jpmonteagudo.com/index.html","id":"importing-literature-matrices","dir":"","previous_headings":"Intro","what":"Importing Literature Matrices","title":"Literature Matrix Synthesis Tools for Epidemiology and Health Science Research","text":"first step bring literature data R. existing matrix CSV another format, use import_matrix() function. Otherwise, create empty matrix using init_matrix():","code":"library(matriz) #>  #> Attaching package: 'matriz' #> The following object is masked from 'package:base': #>  #>     truncate  lit_matrix <- init_matrix()  # Get matriz structure to guide in creating records matriz_names() #>                        class #> year                 numeric #> citation           character #> keywords           character #> profession         character #> electronic           logical #> purpose            character #> study_design       character #> outcome_var        character #> predictor_var      character #> sample               numeric #> dropout_rate         numeric #> setting            character #> inclusion_criteria character #> ethnicity          character #> age                  numeric #> sex                   factor #> income                factor #> education          character #> measures           character #> analysis           character #> results            character #> limitations        character #> implications       character #> ethical_concerns   character #> biases             character #> notes              character  # Start filling out individual record with article info article <- data.frame(year = 2025,                 citation = \" \",                 keywords = \" \",                 profession = \"underwater basket weaver\",                 electronic = \"YES\",                 purpose = \"To investigate the depth of the oceans and retireve weaving materials\",                 study_design = \"ethnography\",                  outcome_var = \"perceived attitudes towards basket weaving\",                 predictor_var = NA,                  sample = \"a small school of clown fish\",                  setting = \"Italy\",                 drop_rate = 0.13,                  inclusion_criteria = \"clow fish in Adriatic Sea\",                  ehtnicity = \"oceanic\",                  age = \"0 - 1 year\",                 sex = \"both\",                 income = \" \",                 education = \"none\",                 measures = \"perceived attitudes\",                 analysis = \"qualitative\",                  results = \"no significant differences\",                 limitations = \"small sample size\",                  implications = \"clow fish don't like humans taking their homes for their own basket weaving endeavors\",                 ethical_concerns = \"no informed consent given to school of clown fish\",                 biases = \"clownfish always try to be funny. Lack of seriounness\",                 notes = \"more research needed\")   # Process and add the citation to the current record bibtex <- system.file(\"examples\",\"example.bib\",package = \"matriz\")  cited_article <- process_citation(article,bibtex)   # Add the record to the literature matrix lit_matrix <- add_record(lit_matrix, cited_article, .before = 1)  # Update record if mistake was made lit_matrix <- update_record(lit_matrix, notes, where = year == 2025, set_to = \"actually, the clow fish don't want us to come back.\")"},{"path":"https://matriz.jpmonteagudo.com/index.html","id":"merging-matrices","dir":"","previous_headings":"Intro","what":"Merging Matrices","title":"Literature Matrix Synthesis Tools for Epidemiology and Health Science Research","text":"multiple literature matrices need combine , use merge_matrix()intend combine matrices dissimilar column names. joining two equal matrices distinct articles, use add_record() add one record time add_batch_record() add multiple article summaries . Note: article summaries lists element classes differ init_matrix data frame, using add_batch_record() may coerce elements lists instead preserving original classes.","code":"# Merge two literature matrices by a common column (e.g., \"study_id\") additional_matrix <- lit_matrix combined_matrix <- merge_matrix(lit_matrix, additional_matrix, by = \"year\", all = TRUE) #> Removing duplicate columns...  # if you rather bind the two matrices together by rows, use 'add_batch_record()' lit_matrix <- add_batch_record(lit_matrix, additional_matrix)"},{"path":"https://matriz.jpmonteagudo.com/index.html","id":"searching-for-records","dir":"","previous_headings":"Intro","what":"Searching for Records","title":"Literature Matrix Synthesis Tools for Epidemiology and Health Science Research","text":"matrix set , might need search specific studies based keywords, author names, topics. Use search_record() filter matrix relevant entries.","code":"# Let's find all the electronic records we've summarized so far  useless_search <- search_record(lit_matrix, where = electronic == \"YES\") head(useless_search,1) #>   year #> 1 2024 #>                                                                          citation #> 1 Smith J, Jones K. Example Title. Journal Name. 2024;1:1-10. doi:10.1234/example #>   keywords               profession electronic #> 1     <NA> underwater basket weaver        YES #>                                                                 purpose #> 1 To investigate the depth of the oceans and retireve weaving materials #>   study_design                                outcome_var predictor_var #> 1  ethnography perceived attitudes towards basket weaving          <NA> #>                         sample dropout_rate setting        inclusion_criteria #> 1 a small school of clown fish        Italy    0.13 clow fish in Adriatic Sea #>   ethnicity        age  sex income education            measures    analysis #> 1   oceanic 0 - 1 year both             none perceived attitudes qualitative #>                      results       limitations #> 1 no significant differences small sample size #>                                                                            implications #> 1 clow fish don't like humans taking their homes for their own basket weaving endeavors #>                                    ethical_concerns #> 1 no informed consent given to school of clown fish #>                                                  biases                notes #> 1 clownfish always try to be funny. Lack of seriounness more research needed   # Change format to paper record by updating electronic to \"NO\"  lit_matrix <- update_record(lit_matrix,electronic,where = electronic == \"YES\", set_to = \"NO\")"},{"path":"https://matriz.jpmonteagudo.com/index.html","id":"exporting-the-final-matrix","dir":"","previous_headings":"Intro","what":"Exporting the Final Matrix","title":"Literature Matrix Synthesis Tools for Epidemiology and Health Science Research","text":"’ve refined categorized literature review, can export matrix use Excel tools using export_matrix(). structured workflow make managing literature reviews efficient streamlined.","code":"# Let's export our matrix export_matrix(lit_matrix,\"lit_matrix.txt\",format = \"txt\") #> Successfully imported matrix with 26 columns (26 required + 0 additional). #> Data successfully exported to lit_matrix.txt"},{"path":"https://matriz.jpmonteagudo.com/index.html","id":"project-status","dir":"","previous_headings":"","what":"Project status","title":"Literature Matrix Synthesis Tools for Epidemiology and Health Science Research","text":"Actively developed, though pace slowed now ’m busier packages school work. use almost every day ’s going anywhere. plans substantially enlarge extend really testing daily use.","code":""},{"path":"https://matriz.jpmonteagudo.com/index.html","id":"contributions","dir":"","previous_headings":"","what":"Contributions","title":"Literature Matrix Synthesis Tools for Epidemiology and Health Science Research","text":"like contribute package, ’d love help! Please read guidelines submitting pull request.","code":""},{"path":"https://matriz.jpmonteagudo.com/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Literature Matrix Synthesis Tools for Epidemiology and Health Science Research","text":"Please note matriz project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/add_batch_record.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Multiple Records to a literature matrix — add_batch_record","title":"Add Multiple Records to a literature matrix — add_batch_record","text":"Adds one records literature matrix specified position. Records can provided lists data frames, can inserted specific rows.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/add_batch_record.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Multiple Records to a literature matrix — add_batch_record","text":"","code":"add_batch_record(.data, ..., .before = NULL, .after = NULL)"},{"path":"https://matriz.jpmonteagudo.com/reference/add_batch_record.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Multiple Records to a literature matrix — add_batch_record","text":".data data frame records added ... One records add. record can either: list length number columns `.data` data frame column structure `.data` .Row number insert new records. NULL (default), `.` also NULL, records appended end. .Row number insert new records. NULL (default), `.` also NULL, records appended end.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/add_batch_record.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Multiple Records to a literature matrix — add_batch_record","text":"data frame new records added specified position","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/add_batch_record.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Multiple Records to a literature matrix — add_batch_record","text":"","code":"# Create sample data frame df <- data.frame(   name = c(\"John\", \"Jane\"),   age = c(25, 30) )  # Add a single record as a list df <- add_batch_record(df, list(name = \"Bob\", age = 35))  # Add multiple records as data frames new_records <- data.frame(   name = c(\"Alice\", \"Charlie\"),   age = c(28, 40) ) df <- add_batch_record(df, new_records, .before = 2)"},{"path":"https://matriz.jpmonteagudo.com/reference/add_empty_row.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an Empty Row to a Data Frame — add_empty_row","title":"Add an Empty Row to a Data Frame — add_empty_row","text":"Adds single row NA values data frame","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/add_empty_row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an Empty Row to a Data Frame — add_empty_row","text":"","code":"add_empty_row(.data)"},{"path":"https://matriz.jpmonteagudo.com/reference/add_empty_row.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an Empty Row to a Data Frame — add_empty_row","text":".data data frame empty row added","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/add_empty_row.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add an Empty Row to a Data Frame — add_empty_row","text":"Modified data frame additional empty row","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/add_record.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a Record to a Data Frame — add_record","title":"Add a Record to a Data Frame — add_record","text":"Adds new row data frame specified position","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/add_record.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a Record to a Data Frame — add_record","text":"","code":"add_record(.data, ..., .before = NULL, .after = NULL)"},{"path":"https://matriz.jpmonteagudo.com/reference/add_record.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a Record to a Data Frame — add_record","text":".data data frame record added ... New record added (vector, list, data frame) .Optional. Row number insert new record .Optional. Row number insert new record","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/add_record.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a Record to a Data Frame — add_record","text":"Modified data frame new record inserted","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/add_record.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a Record to a Data Frame — add_record","text":"","code":"df <- data.frame(x = 1:3, y = 4:6) add_record(df, c(4, 7)) #>   x y #> 1 1 4 #> 2 2 5 #> 3 3 6 #> 4 4 7 add_record(df, c(4, 7), .before = 2) #>    x y #> 1  1 4 #> 2  4 7 #> 21 2 5 #> 3  3 6"},{"path":"https://matriz.jpmonteagudo.com/reference/append_column.html","id":null,"dir":"Reference","previous_headings":"","what":"Append a Column to a Data Frame — append_column","title":"Append a Column to a Data Frame — append_column","text":"Internal function add new column data frame optionally position specified column.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/append_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append a Column to a Data Frame — append_column","text":"","code":"append_column(.data, new_col, .before = NULL, .after = NULL)"},{"path":"https://matriz.jpmonteagudo.com/reference/append_column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append a Column to a Data Frame — append_column","text":".data data frame column added. new_col vector containing values new column append. name vector used column name data frame. .(Optional) string specifying name column new column inserted. Defaults `NULL`. .(Optional) string specifying name column new column inserted. Defaults `NULL`.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/append_column.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append a Column to a Data Frame — append_column","text":"data frame new column added specified position end position specified.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/append_column.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Append a Column to a Data Frame — append_column","text":"`.` `.` provided, `.` takes precedence. neither provided, new column appended end data frame. column name derived name input vector `new_col`.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/delete_record.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete Records from a Data Frame — delete_record","title":"Delete Records from a Data Frame — delete_record","text":"Deletes specific rows data frame clears entire data frame leveraging `truncate` function. position provided, issue message either return unchanged data use `truncate` empty data frame, depending additional arguments.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/delete_record.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete Records from a Data Frame — delete_record","text":"","code":"delete_record(.data, position = NULL, ...)"},{"path":"https://matriz.jpmonteagudo.com/reference/delete_record.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete Records from a Data Frame — delete_record","text":".data data frame records deleted. position numeric vector specifying row positions deleted. `NULL`, behavior determined number rows data frame additional arguments passed `truncate` function. ... Additional arguments passed `truncate` function. Specifically, `keep_rows` argument can used decide whether non-NA cells data frame cleared truncating.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/delete_record.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete Records from a Data Frame — delete_record","text":"modified data frame specified rows removed. `position` `NULL`, function either   returns original data frame empty data frame, based `keep_rows` argument `truncate` function.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/delete_record.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Delete Records from a Data Frame — delete_record","text":"- `position` `NULL` data frame one row, message issued, records deleted. - `position` numeric vector, specified rows deleted using `dplyr::slice()`. - `position` empty invalid (e.g., numeric), function stops appropriate error message. - rows remain deletion, function calls `truncate` handle data frame, behavior   controlled `keep_rows` argument passed `...`.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/delete_record.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete Records from a Data Frame — delete_record","text":"","code":"df <- data.frame(A = 1:5, B = letters[1:5])  # Delete a specific row delete_record(df, position = 2) #>   A B #> 1 1 a #> 2 3 c #> 3 4 d #> 4 5 e  # Delete multiple rows delete_record(df, position = c(2, 4)) #>   A B #> 1 1 a #> 2 3 c #> 3 5 e  # Use truncate to clear the data frame delete_record(df, position = NULL, keep_rows = FALSE) #> No records have been deleted. Are you looking to delete all records from literature matrix? Use 'truncate' instead. #>   A B #> 1 1 a #> 2 2 b #> 3 3 c #> 4 4 d #> 5 5 e  # Keep non-NA cells but empty rows delete_record(df, position = NULL, keep_rows = TRUE) #> No records have been deleted. Are you looking to delete all records from literature matrix? Use 'truncate' instead. #>   A B #> 1 1 a #> 2 2 b #> 3 3 c #> 4 4 d #> 5 5 e"},{"path":"https://matriz.jpmonteagudo.com/reference/deparse_dots.html","id":null,"dir":"Reference","previous_headings":"","what":"Deparse dots arguments into character vector — deparse_dots","title":"Deparse dots arguments into character vector — deparse_dots","text":"Takes dots arguments deparses character vector.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/deparse_dots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deparse dots arguments into character vector — deparse_dots","text":"","code":"deparse_dots(...)"},{"path":"https://matriz.jpmonteagudo.com/reference/deparse_dots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deparse dots arguments into character vector — deparse_dots","text":"... Arguments deparse","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/deparse_dots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deparse dots arguments into character vector — deparse_dots","text":"character vector containing deparsed expressions","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/determine_position.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine Row Insertion Position — determine_position","title":"Determine Row Insertion Position — determine_position","text":"Calculates position inserting new row data frame","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/determine_position.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine Row Insertion Position — determine_position","text":"","code":"determine_position(.data, record, .before = NULL, .after = NULL)"},{"path":"https://matriz.jpmonteagudo.com/reference/determine_position.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine Row Insertion Position — determine_position","text":".data Original data frame record New row inserted .Optional. Row number insert .Optional. Row number insert","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/determine_position.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine Row Insertion Position — determine_position","text":"List containing potentially modified data frame insertion position","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/dots_n.html","id":null,"dir":"Reference","previous_headings":"","what":"Count number of dots arguments — dots_n","title":"Count number of dots arguments — dots_n","text":"Returns number arguments passed via ...","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/dots_n.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count number of dots arguments — dots_n","text":"","code":"dots_n(...)"},{"path":"https://matriz.jpmonteagudo.com/reference/dots_n.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count number of dots arguments — dots_n","text":"... Arguments count","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/dots_n.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count number of dots arguments — dots_n","text":"Integer length dots arguments","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/equal_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if two objects have identical column names — equal_names","title":"Check if two objects have identical column names — equal_names","text":"Compares column names two objects element element.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/equal_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if two objects have identical column names — equal_names","text":"","code":"equal_names(x, y)"},{"path":"https://matriz.jpmonteagudo.com/reference/equal_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if two objects have identical column names — equal_names","text":"x First object compare y Second object compare","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/equal_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if two objects have identical column names — equal_names","text":"Logical indicating objects identical column names","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/export_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Export a Data Matrix to Various File Formats — export_matrix","title":"Export a Data Matrix to Various File Formats — export_matrix","text":"function exports data frame specified file format, including CSV, TSV, RDS, XLSX, TXT. format provided, inferred file extension.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/export_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export a Data Matrix to Various File Formats — export_matrix","text":"","code":"export_matrix(   .data,   file,   format = NULL,   drop_extra = FALSE,   extra_columns = NULL,   silent = FALSE,   ... )"},{"path":"https://matriz.jpmonteagudo.com/reference/export_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export a Data Matrix to Various File Formats — export_matrix","text":".data data frame tibble exported. file character string specifying file name path. format character string specifying file format. `NULL`, format inferred file extension. Supported formats: `\"csv\"`, `\"tsv\"`, `\"rds\"`, `\"xlsx\"`, `\"txt\"`. drop_extra Logical. `TRUE`, removes columns listed `extra_columns` exporting. Default `FALSE`. extra_columns character vector specifying additional columns retain `drop_extra = TRUE`. Default `NULL`. silent Logical. `TRUE`, suppresses messages. Default `FALSE`. ... Additional arguments passed underlying export functions (`write.csv`, `writexl::write_xlsx`, etc.).","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/export_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export a Data Matrix to Various File Formats — export_matrix","text":"Exports data file returns `NULL` invisibly.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract elements — extract","title":"Extract elements — extract","text":"Alias base R extract operator `[`","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract elements — extract","text":"","code":"extract()"},{"path":"https://matriz.jpmonteagudo.com/reference/extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract elements — extract","text":"typically array-like R object similar class x.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/extract2.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract single element — extract2","title":"Extract single element — extract2","text":"Alias base R extract operator `[[`","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/extract2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract single element — extract2","text":"","code":"extract2()"},{"path":"https://matriz.jpmonteagudo.com/reference/extract2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract single element — extract2","text":"typically array-like R object similar class x.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/extract_field.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract field value from BibTeX entry — extract_field","title":"Extract field value from BibTeX entry — extract_field","text":"Extracts value specified field BibTeX entry string using regular expressions. function case-insensitive handles various spacing patterns around field delimiter.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/extract_field.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract field value from BibTeX entry — extract_field","text":"","code":"extract_field(entry, field)"},{"path":"https://matriz.jpmonteagudo.com/reference/extract_field.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract field value from BibTeX entry — extract_field","text":"entry Character string containing BibTeX entry field Name field extract (e.g., \"title\", \"author\", \"year\")","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/extract_field.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract field value from BibTeX entry — extract_field","text":"Character string containing field value found, NA field present","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/extract_field.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract field value from BibTeX entry — extract_field","text":"function searches patterns form \"field = {value}\" BibTeX entry, ignoring case allowing variable whitespace around equals sign. value expected enclosed curly braces.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/format_ama_citation.html","id":null,"dir":"Reference","previous_headings":"","what":"Format BibTeX Entry to AMA Citation Style — format_ama_citation","title":"Format BibTeX Entry to AMA Citation Style — format_ama_citation","text":"Converts BibTeX entry AMA (American Medical Association) citation format. Handles article, book, miscellaneous entry types.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/format_ama_citation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format BibTeX Entry to AMA Citation Style — format_ama_citation","text":"","code":"format_ama_citation(bibtex_entry)"},{"path":"https://matriz.jpmonteagudo.com/reference/format_ama_citation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format BibTeX Entry to AMA Citation Style — format_ama_citation","text":"bibtex_entry character string containing single BibTeX entry","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/format_ama_citation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format BibTeX Entry to AMA Citation Style — format_ama_citation","text":"object class c(\"bibentry\", \"character\", \"citation\") containing: string original BibTeX entry year publication year numeric citation formatted AMA citation string keywords vector keywords","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/format_ama_citation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format BibTeX Entry to AMA Citation Style — format_ama_citation","text":"","code":"bibtex <- \"@article{key,   author = {Smith J and Jones K},   title = {Example Title},   journal = {Journal Name},   year = {2024},   volume = {1},   pages = {1-10} }\" citation <- format_ama_citation(bibtex)"},{"path":"https://matriz.jpmonteagudo.com/reference/format_batch_ama_citation.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Multiple BibTeX Entries to AMA Citation Style — format_batch_ama_citation","title":"Format Multiple BibTeX Entries to AMA Citation Style — format_batch_ama_citation","text":"Processes multiple BibTeX entries converts AMA (American Medical Association) citation format. Handles article, book, miscellaneous entry types.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/format_batch_ama_citation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Multiple BibTeX Entries to AMA Citation Style — format_batch_ama_citation","text":"","code":"format_batch_ama_citation(bibtex_entries)"},{"path":"https://matriz.jpmonteagudo.com/reference/format_batch_ama_citation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Multiple BibTeX Entries to AMA Citation Style — format_batch_ama_citation","text":"bibtex_entries character vector containing one BibTeX entries","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/format_batch_ama_citation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format Multiple BibTeX Entries to AMA Citation Style — format_batch_ama_citation","text":"given single entry, returns single citation object. given multiple   entries, returns list citation objects. object class   c(\"bibentry\", \"character\", \"citation\") containing: string original BibTeX entry year publication year numeric citation formatted AMA citation string keywords vector keywords","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/format_batch_ama_citation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format Multiple BibTeX Entries to AMA Citation Style — format_batch_ama_citation","text":"","code":"entries <- c(   \"@article{key1,     author = {Smith J},     title = {First Example},     journal = {Journal One},     year = {2024}   }\",   \"@book{key2,     author = {Jones K},     title = {Second Example},     publisher = {Publisher},     year = {2024}   }\" ) citations <- format_batch_ama_citation(entries)"},{"path":"https://matriz.jpmonteagudo.com/reference/import_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"This function imports a matrix (data frame) from various file formats (CSV, TSV, RDS, XLSX, XLS, TXT) and ensures it contains the required columns. It also allows the user to control whether extra columns should be dropped or kept. — import_matrix","title":"This function imports a matrix (data frame) from various file formats (CSV, TSV, RDS, XLSX, XLS, TXT) and ensures it contains the required columns. It also allows the user to control whether extra columns should be dropped or kept. — import_matrix","text":"function imports matrix (data frame) various file formats (CSV, TSV, RDS, XLSX, XLS, TXT) ensures contains required columns. also allows user control whether extra columns dropped kept.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/import_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function imports a matrix (data frame) from various file formats (CSV, TSV, RDS, XLSX, XLS, TXT) and ensures it contains the required columns. It also allows the user to control whether extra columns should be dropped or kept. — import_matrix","text":"","code":"import_matrix(   path,   format = NULL,   drop_extra = FALSE,   extra_columns = NULL,   remove_dups = TRUE,   silent = FALSE,   ... )"},{"path":"https://matriz.jpmonteagudo.com/reference/import_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function imports a matrix (data frame) from various file formats (CSV, TSV, RDS, XLSX, XLS, TXT) and ensures it contains the required columns. It also allows the user to control whether extra columns should be dropped or kept. — import_matrix","text":"path character string specifying path file imported. format character string specifying file format. provided, format automatically detected based file extension. Supported formats: \"csv\", \"tsv\", \"rds\", \"xlsx\", \"xls\", \"txt\". drop_extra logical value indicating whether extra columns (list required columns) dropped. Default `FALSE`. extra_columns character vector column names allowed addition required columns. default, extra columns allowed. remove_dups logical value indicating whether remove duplicate columns merging. Default `TRUE`. silent logical value indicating whether suppress messages. Default `FALSE`. ... Additional arguments passed specific file-reading functions (e.g., `read.csv`, `read.delim`, `readRDS`, `readxl::read_xlsx`, `readxl::read_xls`, `read.table`). Refer documentation corresponding read function list valid arguments.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/import_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function imports a matrix (data frame) from various file formats (CSV, TSV, RDS, XLSX, XLS, TXT) and ensures it contains the required columns. It also allows the user to control whether extra columns should be dropped or kept. — import_matrix","text":"data frame containing imported matrix, required columns allowed extra columns.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/import_matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"This function imports a matrix (data frame) from various file formats (CSV, TSV, RDS, XLSX, XLS, TXT) and ensures it contains the required columns. It also allows the user to control whether extra columns should be dropped or kept. — import_matrix","text":"matrix includes following predefined columns: - `year`: Numeric. Year publication. - `citation`: Character. Citation reference details. - `keywords`: Character. Keywords tags study. - `profession`: Character. Profession study participants target audience. - `electronic`: Logical. Indicates whether study available electronically. - `purpose`: Character. Purpose objective study. - `study_design`: Character. Study design methodology. - `outcome_var`: Character. Outcome variables measured study. - `predictor_var`: Character. Predictor variables considered study. - `sample`: Numeric. Sample size. - `dropout_rate`: Numeric. Dropout attrition rate. - `setting`: Character. Study setting (e.g., clinical, educational). - `inclusion_criteria`: Character. Inclusion criteria participants. - `ethnicity`: Character. Ethnic background participants. - `age`: Numeric. Age participants. - `sex`: Factor. Sex participants. - `income`: Factor. Income level participants. - `education`: Character. Educational background participants. - `measures`: Character. Measures instruments used data collection. - `analysis`: Character. Analytical methods used. - `results`: Character. Summary results findings. - `limitations`: Character. Limitations study. - `implications`: Character. Implications recommendations study. - `ethical_concerns`: Character. Ethical concerns addressed study. - `biases`: Character. Potential biases study. - `notes`: Character. Additional notes observations. Extra columns beyond required ones handled via `extra_columns` argument. `drop_extra` argument set `TRUE`, extra columns removed. `drop_extra` `FALSE`, extra columns remain imported data, message shown. `...` argument allows pass additional parameters directly read functions. instance: - `read.csv`, `...` include `header = TRUE`, `sep = \",\"`, `stringsAsFactors = FALSE`. - `read.delim`, `...` include `header = TRUE`, `sep `, `stringsAsFactors = FALSE`. - `readRDS`, `...` include `refhook = NULL`. - `readxl::read_xlsx`, `...` include `sheet = 1` `col_names = TRUE`. - `readxl::read_xls`, `...` include `sheet = 1` `col_Names = TRUE`. - `read.table`, `...` include `header = TRUE`, `sep`, `stringsAsFactors = FALSE`.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/init_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize a Literature Review Matrix — init_matrix","title":"Initialize a Literature Review Matrix — init_matrix","text":"Creates standardized data frame systematic literature review predefined columns, allowing addition custom columns needed.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/init_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize a Literature Review Matrix — init_matrix","text":"","code":"init_matrix(...)"},{"path":"https://matriz.jpmonteagudo.com/reference/init_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize a Literature Review Matrix — init_matrix","text":"... Optional. Additional column names (character strings) appended matrix.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/init_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize a Literature Review Matrix — init_matrix","text":"data frame predefined columns literature review analysis.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/init_matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initialize a Literature Review Matrix — init_matrix","text":"matrix includes following predefined columns: - `year`: Numeric. Year publication. - `citation`: Character. Citation reference details. - `keywords`: Character. Keywords tags study. - `profession`: Character. Profession study participants target audience. - `electronic`: Logical. Indicates whether study available electronically. - `purpose`: Character. Purpose objective study. - `study_design`: Character. Study design methodology. - `outcome_var`: Character. Outcome variables measured study. - `predictor_var`: Character. Predictor variables considered study. - `sample`: Numeric. Sample size. - `dropout_rate`: Numeric. Dropout attrition rate. - `setting`: Character. Study setting (e.g., clinical, educational). - `inclusion_criteria`: Character. Inclusion criteria participants. - `ethnicity`: Character. Ethnic background participants. - `age`: Numeric. Age participants. - `sex`: Factor. Sex participants. - `income`: Factor. Income level participants. - `education`: Character. Educational background participants. - `measures`: Character. Measures instruments used data collection. - `analysis`: Character. Analytical methods used. - `results`: Character. Summary results findings. - `limitations`: Character. Limitations study. - `implications`: Character. Implications recommendations study. - `ethical_concerns`: Character. Ethical concerns addressed study. - `biases`: Character. Potential biases study. - `notes`: Character. Additional notes observations. Custom columns can also added passing names via `...` argument.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/init_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize a Literature Review Matrix — init_matrix","text":"","code":"# Create a basic literature review matrix lit_matrix <- init_matrix()"},{"path":"https://matriz.jpmonteagudo.com/reference/is_empty.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if object is empty — is_empty","title":"Check if object is empty — is_empty","text":"Tests object length zero.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/is_empty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if object is empty — is_empty","text":"","code":"is_empty(x)"},{"path":"https://matriz.jpmonteagudo.com/reference/is_empty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if object is empty — is_empty","text":"x Object test","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/is_empty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if object is empty — is_empty","text":"Logical indicating object zero length","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/is_nested_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine if list is nested — is_nested_list","title":"Determine if list is nested — is_nested_list","text":"Checks nested lists batch functions","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/is_nested_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine if list is nested — is_nested_list","text":"","code":"is_nested_list(x)"},{"path":"https://matriz.jpmonteagudo.com/reference/is_nested_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine if list is nested — is_nested_list","text":"x List check","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/is_nested_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine if list is nested — is_nested_list","text":"Logical indicating list nested","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/matriz-package.html","id":null,"dir":"Reference","previous_headings":"","what":"matriz: Literature Matrix Synthesis Tools for Epidemiology and Health Science Research — matriz-package","title":"matriz: Literature Matrix Synthesis Tools for Epidemiology and Health Science Research — matriz-package","text":"easy--use workflow provides tools create, update fill literature matrices commonly used research, specifically epidemiology health sciences research. project born need easy––use tool research methods classes.","code":""},{"path":[]},{"path":"https://matriz.jpmonteagudo.com/reference/matriz-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"matriz: Literature Matrix Synthesis Tools for Epidemiology and Health Science Research — matriz-package","text":"Maintainer: JP Monteagudo jpmonteagudo2014@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/matriz_message.html","id":null,"dir":"Reference","previous_headings":"","what":"Display package version for matriz — matriz_message","title":"Display package version for matriz — matriz_message","text":"matriz_message() produces message package version version R making use package.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/matriz_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display package version for matriz — matriz_message","text":"","code":"matriz_message()"},{"path":"https://matriz.jpmonteagudo.com/reference/matriz_message.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display package version for matriz — matriz_message","text":"dmatriz_message() returns message install version matriz.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/matriz_message.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Display package version for matriz — matriz_message","text":"JP Monteagudo","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/matriz_message.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display package version for matriz — matriz_message","text":"","code":"matriz_message() #> ------------------------- #> matriz string generated by {matriz} v.1.0.1. #> R version 4.4.2 (2024-10-31). #> ------------------------- #> Easily generate and manage structured literature review matrices in R. #> Streamline your research synthesis, track key study details, and organize citations efficiently."},{"path":"https://matriz.jpmonteagudo.com/reference/matriz_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Column Classes from deafult literature matrix. — matriz_names","title":"Retrieve Column Classes from deafult literature matrix. — matriz_names","text":"function calls init_matrix() obtain matrix data frame, extracts class column. returns data frame containing class information column.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/matriz_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Column Classes from deafult literature matrix. — matriz_names","text":"","code":"matriz_names(...)"},{"path":"https://matriz.jpmonteagudo.com/reference/matriz_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Column Classes from deafult literature matrix. — matriz_names","text":"... extra arguments pass column names literature matrix","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/matriz_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Column Classes from deafult literature matrix. — matriz_names","text":"data frame one column named class lists class   column matrix data frame returned init_matrix().","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/matriz_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve Column Classes from deafult literature matrix. — matriz_names","text":"purpose function provide user quick way check default names classes matrix filled instead type `str(init_matrix())` every time user forgets category default matrix.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/matriz_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Column Classes from deafult literature matrix. — matriz_names","text":"","code":"matriz_names() #>                        class #> year                 numeric #> citation           character #> keywords           character #> profession         character #> electronic           logical #> purpose            character #> study_design       character #> outcome_var        character #> predictor_var      character #> sample               numeric #> dropout_rate         numeric #> setting            character #> inclusion_criteria character #> ethnicity          character #> age                  numeric #> sex                   factor #> income                factor #> education          character #> measures           character #> analysis           character #> results            character #> limitations        character #> implications       character #> ethical_concerns   character #> biases             character #> notes              character"},{"path":"https://matriz.jpmonteagudo.com/reference/merge_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge Two literature matrices by Common Columns — merge_matrix","title":"Merge Two literature matrices by Common Columns — merge_matrix","text":"function merges two literature matrices based specified key columns, options full inner joins duplicate column removal.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/merge_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge Two literature matrices by Common Columns — merge_matrix","text":"","code":"merge_matrix(   .data,   .data2,   by = NULL,   all = FALSE,   remove_dups = TRUE,   suffixes = c(\".x\", \".y\"),   silent = FALSE )"},{"path":"https://matriz.jpmonteagudo.com/reference/merge_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge Two literature matrices by Common Columns — merge_matrix","text":".data data frame merged. .data2 second data frame merged `.data`. character vector specifying column(s) merge . Must exist data frames. logical value indicating whether perform full join (`TRUE`) inner join (`FALSE`, default). remove_dups logical value indicating whether remove duplicate columns merging. Default `TRUE`. suffixes character vector length 2 specifying suffixes apply overlapping column names `.data` `.data2`, respectively. Default `c(\".x\", \".y\")`. silent logical value indicating whether suppress messages duplicate column removal. Default `FALSE`.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/merge_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge Two literature matrices by Common Columns — merge_matrix","text":"merged data frame specified join conditions applied.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/merge_matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merge Two literature matrices by Common Columns — merge_matrix","text":"function first ensures `.data` `.data2` valid data frames checks `` columns exist . `remove_dups = TRUE`, duplicate columns removed merging. function performs either full inner join using `dplyr::full_join()` `dplyr::inner_join()`, respectively.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/merge_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge Two literature matrices by Common Columns — merge_matrix","text":"","code":"df1 <- data.frame(id = c(1, 2, 3), value1 = c(\"A\", \"B\", \"C\")) df2 <- data.frame(id = c(2, 3, 4), value2 = c(\"X\", \"Y\", \"Z\"))  # Inner join (default) merge_matrix(df1, df2, by = \"id\") #> Removing duplicate columns... #>   id value1 value2 #> 1  2      B      X #> 2  3      C      Y  # Full join merge_matrix(df1, df2, by = \"id\", all = TRUE) #> Removing duplicate columns... #>   id value1 value2 #> 1  1      A   <NA> #> 2  2      B      X #> 3  3      C      Y #> 4  4   <NA>      Z  # Remove duplicate columns before merging df3 <- data.frame(id = c(1, 2, 3), value1 = c(\"A\", \"B\", \"C\"), extra = c(1, 2, 3)) df4 <- data.frame(id = c(2, 3, 4), value2 = c(\"X\", \"Y\", \"Z\"), extra = c(4, 5, 6)) merge_matrix(df3, df4, by = \"id\", remove_dups = TRUE) #> Removing duplicate columns... #>   id value1 extra.x value2 extra.y #> 1  2      B       2      X       4 #> 2  3      C       3      Y       5"},{"path":"https://matriz.jpmonteagudo.com/reference/parse_batch_citation.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse Multiple Citations from File — parse_batch_citation","title":"Parse Multiple Citations from File — parse_batch_citation","text":"Reads parses multiple BibTeX citations file, handling whitespace formatting ensuring proper brace matching.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/parse_batch_citation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse Multiple Citations from File — parse_batch_citation","text":"","code":"parse_batch_citation(entry)"},{"path":"https://matriz.jpmonteagudo.com/reference/parse_batch_citation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse Multiple Citations from File — parse_batch_citation","text":"entry character string containing path file BibTeX citations","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/parse_batch_citation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse Multiple Citations from File — parse_batch_citation","text":"file contains single citation, returns character string.   multiple citations present, returns character vector citations.   Returns NULL citations found.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/parse_citation.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse Citation from File — parse_citation","title":"Parse Citation from File — parse_citation","text":"Reads parses single BibTeX citation file, cleaning whitespace formatting.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/parse_citation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse Citation from File — parse_citation","text":"","code":"parse_citation(entry)"},{"path":"https://matriz.jpmonteagudo.com/reference/parse_citation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse Citation from File — parse_citation","text":"entry character string containing path file BibTeX citation","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/parse_citation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse Citation from File — parse_citation","text":"character string containing cleaned parsed BibTeX entry","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/process_batch_citation.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Multiple BibTeX Citations and Update Literature Matrix — process_batch_citation","title":"Process Multiple BibTeX Citations and Update Literature Matrix — process_batch_citation","text":"Reads multiple BibTeX citations files updates corresponding rows literature matrix formatted citations, keywords, years.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/process_batch_citation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Multiple BibTeX Citations and Update Literature Matrix — process_batch_citation","text":"","code":"process_batch_citation(.data, citations, where = NULL)"},{"path":"https://matriz.jpmonteagudo.com/reference/process_batch_citation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Multiple BibTeX Citations and Update Literature Matrix — process_batch_citation","text":".data data frame containing least three columns: citation: Character column formatted citations keywords: List column citation keywords year: Numeric column publication years citations Character vector file paths BibTeX citation files Numeric vector indicating rows update. NULL (default), rows updated.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/process_batch_citation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Multiple BibTeX Citations and Update Literature Matrix — process_batch_citation","text":"data frame updated citation information specified rows","code":""},{"path":[]},{"path":"https://matriz.jpmonteagudo.com/reference/process_citation.html","id":null,"dir":"Reference","previous_headings":"","what":"Process a Citation Record — process_citation","title":"Process a Citation Record — process_citation","text":"Takes record list citation string, processes citation AMA format, updates record formatted citation, keywords, year.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/process_citation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process a Citation Record — process_citation","text":"","code":"process_citation(.record, citation)"},{"path":"https://matriz.jpmonteagudo.com/reference/process_citation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process a Citation Record — process_citation","text":".record list containing record updated citation character string containing BibTeX citation","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/process_citation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process a Citation Record — process_citation","text":"updated list containing original record added fields: citation formatted AMA citation keywords vector keywords citation year publication year","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/rid_dups.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Duplicates from Vectors or Data Frame Columns — rid_dups","title":"Remove Duplicates from Vectors or Data Frame Columns — rid_dups","text":"Remove Duplicates Vectors Data Frame Columns","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/rid_dups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Duplicates from Vectors or Data Frame Columns — rid_dups","text":"","code":"rid_dups(x, incomparables = FALSE, ...)"},{"path":"https://matriz.jpmonteagudo.com/reference/rid_dups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Duplicates from Vectors or Data Frame Columns — rid_dups","text":"x vector data frame incomparables vector values compared. See ?duplicated ... arguments particular methods used 'unique' 'duplicated'","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/rid_dups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Duplicates from Vectors or Data Frame Columns — rid_dups","text":"input duplicates removed","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/same_column.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if two objects have the same number of columns — same_column","title":"Check if two objects have the same number of columns — same_column","text":"Compares number columns two objects.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/same_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if two objects have the same number of columns — same_column","text":"","code":"same_column(x, y)"},{"path":"https://matriz.jpmonteagudo.com/reference/same_column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if two objects have the same number of columns — same_column","text":"x First object compare y Second object compare","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/same_column.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if two objects have the same number of columns — same_column","text":"Logical indicating objects number columns","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/same_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if two objects have the same length — same_length","title":"Check if two objects have the same length — same_length","text":"Compares lengths two objects, handling special cases lists data frames.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/same_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if two objects have the same length — same_length","text":"","code":"same_length(x, y)"},{"path":"https://matriz.jpmonteagudo.com/reference/same_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if two objects have the same length — same_length","text":"x First object compare y Second object compare","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/same_length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if two objects have the same length — same_length","text":"Logical indicating objects length","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/search_record.html","id":null,"dir":"Reference","previous_headings":"","what":"Search and Filter Records in a literature matrix — search_record","title":"Search and Filter Records in a literature matrix — search_record","text":"Filters literature matrix based specified condition, option restrict search specific column. function supports column names numeric indices column selection.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/search_record.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search and Filter Records in a literature matrix — search_record","text":"","code":"search_record(.data, column = NULL, where = NULL)"},{"path":"https://matriz.jpmonteagudo.com/reference/search_record.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search and Filter Records in a literature matrix — search_record","text":".data data frame search within. column Optional. column search , specified either name numeric index. NULL (default), search performed across columns. logical expression defines search condition. Must evaluate logical vector length number rows `.data`.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/search_record.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search and Filter Records in a literature matrix — search_record","text":"filtered data frame containing rows match search condition.         specific column selected, column returned.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/search_record.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search and Filter Records in a literature matrix — search_record","text":"","code":"df <- data.frame(   id = 1:5,   name = c(\"John\", \"Jane\", \"Bob\", \"Alice\", \"John\"),   age = c(25, 30, 35, 28, 40) )  # Search across all columns where age > 30 search_record(df, where = age > 30) #>   id name age #> 3  3  Bob  35 #> 5  5 John  40  # Search only in the name column for \"John\" search_record(df, column = \"name\", where = name == \"John\") #>   name #> 1 John #> 5 John  # Search using column index search_record(df, column = 2, where = name == \"Jane\") #>   name #> 2 Jane"},{"path":"https://matriz.jpmonteagudo.com/reference/to_char.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Symbol to Character — to_char","title":"Convert Symbol to Character — to_char","text":"Converts symbol character string","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/to_char.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Symbol to Character — to_char","text":"","code":"to_char(symbol)"},{"path":"https://matriz.jpmonteagudo.com/reference/to_char.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Symbol to Character — to_char","text":"symbol symbol convert","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/to_char.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Symbol to Character — to_char","text":"character string","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/truncate.html","id":null,"dir":"Reference","previous_headings":"","what":"Truncate a Data Frame or Matrix — truncate","title":"Truncate a Data Frame or Matrix — truncate","text":"Remove rows literature matrix preserve general structure. Mimics SQL's TRUNCATE operation clearing data preserving structure.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/truncate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Truncate a Data Frame or Matrix — truncate","text":"","code":"truncate(.data, keep_rows = FALSE)"},{"path":"https://matriz.jpmonteagudo.com/reference/truncate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Truncate a Data Frame or Matrix — truncate","text":".data data frame matrix truncated keep_rows Logical. TRUE, replaces non-NA values NA instead removing data","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/truncate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Truncate a Data Frame or Matrix — truncate","text":"empty data frame matrix structure input","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/truncate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Truncate a Data Frame or Matrix — truncate","text":"","code":"# Completely empty a data frame df <- data.frame(x = 1:3, y = 4:6) truncate(df) #> [1] x y #> <0 rows> (or 0-length row.names)  # Replace non-NA values with NA while keeping structure truncate(df, keep_rows = TRUE) #>    x  y #> 1 NA NA #> 2 NA NA #> 3 NA NA"},{"path":"https://matriz.jpmonteagudo.com/reference/update_record.html","id":null,"dir":"Reference","previous_headings":"","what":"Update Rows in a Data Frame Based on a Condition — update_record","title":"Update Rows in a Data Frame Based on a Condition — update_record","text":"Modifies values specified column data frame rows meet given condition.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/update_record.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update Rows in a Data Frame Based on a Condition — update_record","text":"","code":"update_record(.data, column = NULL, where = NULL, set_to = NULL, ...)"},{"path":"https://matriz.jpmonteagudo.com/reference/update_record.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update Rows in a Data Frame Based on a Condition — update_record","text":".data data frame. dataset modify. column column data frame update. Can specified column name, index, unquoted column symbol. condition determines rows update. Must evaluate logical vector length number rows `.data`. set_to value assign rows specified column `` condition `TRUE`. ... Additional arguments (currently unused, reserved future use).","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/update_record.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update Rows in a Data Frame Based on a Condition — update_record","text":"modified data frame updated values.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/update_record.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update Rows in a Data Frame Based on a Condition — update_record","text":"function updates values specified column data frame rows satisfy given condition. `column` parameter can provided : - numeric column index (e.g., `2`). - column name (e.g., `\"value\"`). - unquoted column symbol (e.g., `value`).","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/update_record.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update Rows in a Data Frame Based on a Condition — update_record","text":"","code":"# Example data frame df <- data.frame(   id = 1:5,   value = c(10, 20, 30, 40, 50) )  # Update rows where id > 3 updated_df <- update_record(df, column = value, where = id > 3, set_to = 100) print(updated_df) #>   id value #> 1  1    10 #> 2  2    20 #> 3  3    30 #> 4  4   100 #> 5  5   100  # Using column as a string updated_df <- update_record(df, column = \"value\", where = id == 2, set_to = 99) print(updated_df) #>   id value #> 1  1    10 #> 2  2    99 #> 3  3    30 #> 4  4    40 #> 5  5    50"},{"path":"https://matriz.jpmonteagudo.com/reference/validate_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate and Clean Imported Data Matrix — validate_columns","title":"Validate and Clean Imported Data Matrix — validate_columns","text":"function ensures imported data contains required columns, optionally removes unwanted extra columns, provides informative messages dataset's structure.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/validate_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate and Clean Imported Data Matrix — validate_columns","text":"","code":"validate_columns(   data,   extra_columns = NULL,   drop_extra = FALSE,   silent = FALSE )"},{"path":"https://matriz.jpmonteagudo.com/reference/validate_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate and Clean Imported Data Matrix — validate_columns","text":"data data frame containing imported matrix. extra_columns character vector allowed additional columns beyond required ones. Defaults NULL. drop_extra logical value indicating whether remove extra columns `extra_columns`. Defaults FALSE. silent logical value indicating whether suppress messages. Defaults FALSE.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/validate_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate and Clean Imported Data Matrix — validate_columns","text":"cleaned data frame required columns intact , optionally, extra columns removed.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/validate_columns.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate and Clean Imported Data Matrix — validate_columns","text":"function checks whether required columns present data. required columns missing, stops execution informs user. also identifies extra columns beyond required set compares allowed `extra_columns`. `drop_extra = TRUE`, removes extra columns listed `extra_columns`. `drop_extra = FALSE`, retains extra columns issues message unless `silent = TRUE`.","code":""},{"path":"https://matriz.jpmonteagudo.com/reference/validate_columns.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Validate and Clean Imported Data Matrix — validate_columns","text":"function assumes column names `data` correctly formatted case-sensitive.","code":""},{"path":"https://matriz.jpmonteagudo.com/news/index.html","id":"matriz-101","dir":"Changelog","previous_headings":"","what":"matriz 1.0.1","title":"matriz 1.0.1","text":"CRAN release: 2025-02-05","code":""},{"path":[]},{"path":"https://matriz.jpmonteagudo.com/news/index.html","id":"matriz-010","dir":"Changelog","previous_headings":"","what":"matriz 0.1.0","title":"matriz 0.1.0","text":"Initial CRAN submission.","code":""}]
